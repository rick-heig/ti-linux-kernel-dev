From 5fa49f8e53238fb8d6a814f2425d84b37bb598cf Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Wed, 15 May 2024 16:03:11 -0500
Subject: [PATCH 3/3] hack: cc33xx: rename wlcore_calc_packet_alignment as
 wlcore_cc33xx_calc_packet_alignment

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 drivers/net/wireless/ti/cc33xx/tx.c | 8 ++++----
 drivers/net/wireless/ti/cc33xx/tx.h | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/net/wireless/ti/cc33xx/tx.c b/drivers/net/wireless/ti/cc33xx/tx.c
index 04757d036aa3..494bd9620c13 100644
--- a/drivers/net/wireless/ti/cc33xx/tx.c
+++ b/drivers/net/wireless/ti/cc33xx/tx.c
@@ -169,7 +169,7 @@ u8 cc33xx_tx_get_hlid(struct cc33xx *wl, struct cc33xx_vif *wlvif,
 	return wlvif->sta.hlid;
 }
 
-unsigned int wlcore_calc_packet_alignment(struct cc33xx *wl,
+unsigned int wlcore_cc33xx_calc_packet_alignment(struct cc33xx *wl,
 					  unsigned int packet_length)
 {
 	if ((wl->quirks & WLCORE_QUIRK_TX_PAD_LAST_FRAME) ||
@@ -178,7 +178,7 @@ unsigned int wlcore_calc_packet_alignment(struct cc33xx *wl,
 	else
 		return ALIGN(packet_length, CC33XX_BUS_BLOCK_SIZE);
 }
-EXPORT_SYMBOL(wlcore_calc_packet_alignment);
+EXPORT_SYMBOL(wlcore_cc33xx_calc_packet_alignment);
 
 static u32 cc33xx_calc_tx_blocks(struct cc33xx *wl, u32 len, u32 spare_blks)
 {
@@ -525,8 +525,8 @@ static int cc33xx_prepare_tx_frame(struct cc33xx *wl, struct cc33xx_vif *wlvif,
 	 * In special cases, we want to align to a specific block size
 	 * (eg. for wl128x with SDIO we align to 256).
 	 */
-	total_len = wlcore_calc_packet_alignment(wl, skb->len);
-	cc33xx_debug(DEBUG_TX, "wlcore_calc_packet_alignment ");
+	total_len = wlcore_cc33xx_calc_packet_alignment(wl, skb->len);
+	cc33xx_debug(DEBUG_TX, "wlcore_cc33xx_calc_packet_alignment ");
 
 	memcpy(wl->aggr_buf + buf_offset,
 	       &nab_cmd, sizeof(struct NAB_tx_header));
diff --git a/drivers/net/wireless/ti/cc33xx/tx.h b/drivers/net/wireless/ti/cc33xx/tx.h
index 8261db07d167..e1d582ce7ab5 100644
--- a/drivers/net/wireless/ti/cc33xx/tx.h
+++ b/drivers/net/wireless/ti/cc33xx/tx.h
@@ -143,7 +143,7 @@ u8 cc33xx_tx_get_hlid(struct cc33xx *wl, struct cc33xx_vif *wlvif,
 void cc33xx_tx_reset_link_queues(struct cc33xx *wl, u8 hlid);
 void cc33xx_handle_tx_low_watermark(struct cc33xx *wl);
 bool cc33xx_is_dummy_packet(struct cc33xx *wl, struct sk_buff *skb);
-unsigned int wlcore_calc_packet_alignment(struct cc33xx *wl,
+unsigned int wlcore_cc33xx_calc_packet_alignment(struct cc33xx *wl,
 					  unsigned int packet_length);
 void cc33xx_free_tx_id(struct cc33xx *wl, int id);
 void wlcore_stop_queue_locked(struct cc33xx *wl, struct cc33xx_vif *wlvif,
-- 
2.39.2

